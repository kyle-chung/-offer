地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动。
它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。
例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？ 

示例 1：

输入：m = 2, n = 3, k = 1
输出：3

示例 2：

输入：m = 3, n = 1, k = 0
输出：1

自创：DPF
class Solution:
    def movingCount(self, m: int, n: int, k: int) -> int:
        hashmap = {}
        for i in range(m):
            for j in range(n):
                hashmap[(i,j)] = False
        hashmap[(0,0)] = True
        
        def forward(i,j):
            if i+1 < m:
                if not hashmap[(i+1,j)] and (i+1)%10 + (i+1)//10 + j%10 + j//10 <= k:
                    hashmap[(i+1,j)] = True
                    forward(i+1,j)
            if j+1 < n:
                if not hashmap[(i,j+1)] and (i)%10 + (i)//10 + (j+1)%10 + (j+1)//10 <= k:
                    hashmap[(i,j+1)] = True
                    forward(i,j+1)
            if i-1 >= 0:
                if not hashmap[(i-1,j)] and (i-1)%10 + (i-1)//10 + (j)%10 + (j)//10 <= k:
                    hashmap[(i-1,j)] = True
                    forward(i-1,j)
            if j-1 >= 0:
                if not hashmap[(i,j-1)] and (i)%10 + (i)//10 + (j-1)%10 + (j-1)//10 <= k:
                    hashmap[(i,j-1)] = True
                    forward(i,j-1)
        
        forward(0,0)
        count = 0
        for key,val in hashmap.items():
            if val: count += 1
        return count
