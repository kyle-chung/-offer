写一个函数，求两个整数之和，要求在函数体内不得使用 “+”、“-”、“*”、“/” 四则运算符号。

示例:

输入: a = 1, b = 1
输出: 2

提示：
a, b 均可能是负数或 0

basic knowledge:
    
Python位运算符
按位运算符是把数字看作二进制来进行计算的。Python中的按位运算法则如下：

下表中变量 a 为 60，b 为 13，二进制格式如下：

a = 0011 1100

b = 0000 1101

-----------------
input and output are all Decimal！！！
a&b = 0000 1100   按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0

a|b = 0011 1101   按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。

a^b = 0011 0001   按位异或运算符：当两对应的二进位相异时，结果为1

~a  = 1100 0011   按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1 。~x 类似于 -x-1
    
a<<2 = 1111 0000  左移动运算符：运算数的各二进位全部左移若干位，由 << 右边的数字指定了移动的位数，高位丢弃，低位补0。
    
a>>2 = 1111 0000  右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，>> 右边的数字指定了移动的位数
    
class Solution:
    def add(self, a: int, b: int) -> int:
        x = 0xffffffff
        a, b = a & x, b & x
        while b != 0:
            a, b = (a ^ b), (a & b) << 1 & x
        return a if a <= 0x7fffffff else ~(a ^ x)

